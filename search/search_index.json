{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"aiventure","text":"<p>A strategy game where you build and lead AI labs to dominate the tech industry through smart investments and innovation.</p>"},{"location":"about/","title":"About","text":"<p>Talk about the genesis of the project, the motivation behind it, and the goals you want to achieve.</p>"},{"location":"concepts/","title":"Concepts & Fundamentals","text":"<p>This section should provide all the prior knowledge needed to fully understand the project and its usage.</p>"},{"location":"contributing/","title":"Contributor Guide","text":"<p>Thank you for your interest in improving this project!</p> <p>We welcome contributions from anyone from anyone in the form of suggestions, bug reports, pull requests, and feedback. This document will guide you through the process of contributing to this project.</p> <p>Here is a list of important resources for contributing:</p> <ul> <li>Source Code</li> <li>Issue Tracker</li> <li>[Documentation]</li> </ul>"},{"location":"contributing/#how-to-report-a-bug","title":"How to report a bug","text":"<p>Report bugs on the Issue Tracker.</p> <p>When filing an issue, make sure to answer these questions:</p> <ul> <li>Which Python version are you using?</li> <li>Which version of this project are you using?</li> <li>What did you do?</li> <li>What did you expect to see?</li> <li>What did you see instead?</li> </ul> <p>The best way to get your bug fixed is to provide a test case, and/or steps to reproduce the issue.</p>"},{"location":"contributing/#how-to-request-a-feature","title":"How to request a feature","text":"<p>Request features on the Issue Tracker.</p>"},{"location":"contributing/#how-to-set-up-your-development-environment","title":"How to set up your development environment","text":"<p>You need uv. (Yes that's it, you don't need to install anything else)</p>"},{"location":"contributing/#set-up-the-environment","title":"Set up the environment","text":"<p>Fork the repository and clone it locally.</p> <p>To install all required dependencies and the pinned version of Python, run:</p> <pre><code>uv sync\n</code></pre> <p>It will install the python dependencies needed for the project.</p>"},{"location":"contributing/#quality-checks","title":"Quality checks","text":"<p>If you have installed the pre-commit hooks, they will be run automatically before each commit.</p> <p>You can also run them manually with:</p> <pre><code># All checks used in the pre-commit hooks\nmake checks\n\n# Format the code\nmake fmt\n\n# Run the linter\nmake lint\n</code></pre>"},{"location":"contributing/#test-suite","title":"Test suite","text":"<p>Unit tests are located in the tests directory, and are written using the pytest testing framework.</p> <p>To run the test suite, run:</p> <pre><code>make tests\n</code></pre>"},{"location":"contributing/#documentation","title":"Documentation","text":"<p>The documentation is written using [mkdocs-material].</p> <p>To serve the documentation locally, run:</p> <pre><code>make docs-serve\n</code></pre> <p>To build the documentation, run:</p> <pre><code>make docs-build\n</code></pre>"},{"location":"contributing/#start-working-on-a-new-feature","title":"Start working on a new feature","text":"<p>It is recommended to open an issue before starting work on anything. This will allow a chance to talk it over with the owners and validate your approach.</p> <p>We follow the GitHub flow branching model.</p> <p>To start working on a new feature, create a new branch from the <code>main</code> branch:</p> <pre><code>$ git checkout main\n$ git pull\n$ git checkout -b my-new-feature\n</code></pre> <p>You can also create a new branch directly from the GitHub interface.</p>"},{"location":"contributing/#how-to-submit-changes","title":"How to submit changes","text":"<p>Once you are done working on your feature, push your branch to the remote repository and open a Pull Request.</p> <p>We will review your changes and merge them into the <code>main</code> branch if everything looks good.</p> <p>Your pull request should include: - a clear description of the changes you made - an update of the documentation (if needed) - a link to the issue you are fixing (if any) - tests for the new code (if applicable)</p> <p>Feel free to submit early drafts of your pull request if you want to get feedback on your work in progress. We can always help iterate on your changes.</p>"},{"location":"installation/","title":"Installation","text":"<pre><code>uv pip install aiventure\n</code></pre>"},{"location":"quickstart/","title":"Quickstart","text":"<p>This section should explain how to use the project under 5 minutes.</p>"},{"location":"api/root/","title":"Python","text":"<p>Main entry point for the package.</p>"},{"location":"api/root/#src.aiventure.__main__.run","title":"<code>run(build=False, migrate=False)</code>","text":"<p>Run the API.</p> Source code in <code>src/aiventure/__main__.py</code> <pre><code>@app.command()\ndef run(\n    build: Annotated[bool, typer.Option(\"--build\")] = False,\n    migrate: Annotated[bool, typer.Option(\"--migrate\")] = False,\n) -&gt; None:\n    \"\"\"Run the API.\"\"\"\n    if build:\n        os.system(\"bun run build\")\n\n    if migrate:\n        os.system(\"uv run alembic upgrade head\")\n\n    os.system(\"uv run fastapi dev src/aiventure/api.py --reload\")\n</code></pre>"},{"location":"api/root/#src.aiventure.__main__.version","title":"<code>version()</code>","text":"<p>Show the version of the CLI.</p> Source code in <code>src/aiventure/__main__.py</code> <pre><code>@app.command()\ndef version() -&gt; None:\n    \"\"\"Show the version of the CLI.\"\"\"\n    typer.secho(f\"v{__version__}\", fg=typer.colors.YELLOW)\n</code></pre>"},{"location":"usage/","title":"TODO","text":"<p>Start explaining the usage of the library.</p>"}]}