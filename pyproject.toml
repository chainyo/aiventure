[build-system]
build-backend = "hatchling.build"
requires = ["hatchling"]

[tool.hatch.build.targets.wheel]
packages = ["src/aiventure"]

[project]
name = "aiventure"
dynamic = ["version"]
description = "A strategy game where you build and lead AI labs to dominate the tech industry through smart investments and innovation."
readme = "README.md"
requires-python = ">=3.10"
authors = [{name = "Thomas Chaigneau", email = "thomas@chainyo.dev"}]
keywords = []
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Natural Language :: English",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering",
    "Topic :: Software Development",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    # Add your dependencies here or `uv add <package>` to add them
    # e.g. "pandas>=1.3"
    "fastapi[standard]>=0.115.4",
    "pydantic>=2.9.2",
    "sqlmodel>=0.0.22",
]

[project.scripts]
aiventure = "aiventure.__main__:main"

[project.urls]
Source = "https://github.com/chainyo/aiventure"
Issues = "https://github.com/chainyo/aiventure/issues"

[project.optional-dependencies]
# Add your extra features dependencies here, e.g.
# feature1 = ["pandas>=2.x.x", "numpy>=2.x.x"]

[dependency-groups]
dev = [
    "codespell>=2.2.6",
    "ipykernel>=6.29.3",
    "jupyter>=1.0.0",
    "mypy>=1.8.0",
    "notebook>=7.1.1",
    "pre-commit>=3.5.0",
    "pre-commit-hooks>=4.5.0",
    "ruff>=0.3.1",
    "yamllint>=1.35.1",
]
docs = [
    "mkdocs>=1.5.3",
    "mkdocs-include-markdown-plugin>=6.0.4",
    "mkdocs-git-revision-date-localized-plugin>=1.2.4",
    "mkdocs-material>=9.5.13",
    "mkdocstrings-python>=1.8.0",
]
tests = [
    "pytest>=8.0.2",
    "pytest-cov>=4.1.0",
]

[tool.hatch.version]
path = "src/aiventure/__init__.py"

[tool.uv]
default-groups = ["dev", "docs", "tests"]

[tool.mypy]
python_version = "3.12"
check_untyped_defs = true
ignore_missing_imports = true
warn_return_any = true
plugins = []

[tool.pytest.ini_options]
log_cli_level = "INFO"

[tool.ruff]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]
lint.ignore = [
    "B008", # do not perform function calls in argument defaults
    "C901", # too complex
]
lint.select = [
    "E", # pycodestyle errors
    "W", # pycodestyle warnings
    "F", # pyflakes
    "I", # isort
    "C", # flake8-comprehensions
    "B", # flake8-bugbear
]
line-length = 120
target-version = "py312"

[tool.ruff.format]
quote-style = "double"

[tool.ruff.lint.isort]
known-first-party = ["aiventure"]
lines-after-imports = 2

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "if TYPE_CHECKING:",
]

[tool.codespell]
skip = "*.svelte,*.ts,*.js,*.html,*.yaml,*.yml,*.json"
